extends layout

block content
  script(src='javascripts/jquery-3.1.1.min.js')
  script(src='javascripts/d3.min.js')
  script.
    $(document).ready(function() {
      //d3.json("./myData4.json", function(error, loadedFile) {
        var width = 960,
            height = 500,
            twoPi = 2 * Math.PI,
            progress = 0,
            total = 1308573, // must be hard-coded if server doesn't report Content-Length
            formatPercent = d3.format(".0%");

        var arc = d3.arc()
            .startAngle(0)
            .innerRadius(180)
            .outerRadius(240);

        var svg = d3.select("body").append("svg")
            .attr("width", width)
            .attr("height", height)
            .append("g")
            .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

        var meter = svg.append("g")
            .attr("class", "progress-meter");

        meter.append("path")
            .attr("class", "background")
            .attr("fill", "grey")
            .attr("d", arc.endAngle(twoPi));

        var foreground = meter.append("path")
            .attr("class", "foreground");

        var text = meter.append("text")
            .attr("text-anchor", "middle")
            .attr("dy", ".35em");

        d3.json("https://api.github.com/repos/mbostock/d3/git/blobs/2e0e3b6305fa10c1a89d1dfd6478b1fe7bc19c1e?" + Math.random())
        //d3.json("./myData4.json")
          .on("progress", function() { 
            console.log("--> ", event.loaded);
            console.log("total ", total);
            var i = d3.interpolate(progress, event.loaded / total);
            //console.log("progress", event.loaded/total);
            //console.log(i);
            var ev = event;
            d3.transition().tween("progress", function() {
              return function(t) {
                progress = i(t);
                //console.log("--> ", progress);
                //console.log(".. ", ev.loaded/ev.total);
                //console.log("tot ", total);
                foreground
                  .attr("d", arc.endAngle(twoPi * progress));
                console.log("progress ", progress);
                console.log("total ", total);
                console.log("ev ", ev.loaded);
                console.log("ev ", ev.total);
                
                text.text(formatPercent(progress));
              };
            });
           })
          .on("load", function(json) { console.log("success!", json); })
          .on("error", function(error) { console.log("failure!", error); })
          .get(function(error, data) {
            //meter.transition().delay(250).attr("transform", "scale(0)");
          });
            /*.on("progress", function() {
              var i = d3.interpolate(progress, d3.loaded / total);
              d3.transition().tween("progress", function() {
                return function(t) {
                  progress = i(t);
                  foreground.attr("d", arc.endAngle(twoPi * progress));
                  text.text(formatPercent(progress));
                };
              });
            })
            .get(function(error, data) {
              meter.transition().delay(250).attr("transform", "scale(0)");
            });*/
      //});
    });
